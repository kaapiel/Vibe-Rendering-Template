CONTAINER OP_Storm
{
	NAME OP_Storm;
	INCLUDE GVbase;

	GROUP ID_GVPROPERTIES
	{
		LONG ST_SEED { MIN 0; }
	}

	GROUP ID_GVPORTS
	{
		LONG	ST_TYPE	{ INPORT; EDITPORT; 
										CYCLE
										{
											ST_TYPE_RECTANGLE;
											ST_TYPE_CIRCLE;
										}
									}
		LONG	ST_BTYPE{ INPORT; EDITPORT; 
										CYCLE
										{
											ST_BTYPE_COUNT;
											ST_BTYPE_RATE;
											ST_BTYPE_SHOT;
										}
									}
		LONG			ST_COUNT		{ INPORT; EDITPORT; MIN 0;   }
		REAL			ST_RATE			{ INPORT; EDITPORT; MIN 0.0; }
		LONG			ST_SHOT			{ INPORT; EDITPORT; MIN 0;   }
		BASETIME	ST_LIFE			{ INPORT; EDITPORT; MIN 0.0; MINEX; }
		REAL      ST_LIFEVAR	{ INPORT; EDITPORT; UNIT PERCENT; MIN 0.0; MAX 100.0; }
		REAL      ST_SPEED		{ INPORT; EDITPORT; }
		REAL			ST_SPEEDVAR { INPORT; EDITPORT; UNIT PERCENT; MIN 0.0; MAX 100.0; }
		REAL      ST_SIZE		  { INPORT; EDITPORT; MIN 0.0; }
		REAL			ST_SIZEVAR  { INPORT; EDITPORT; UNIT PERCENT; MIN 0.0; MAX 100.0; }
		REAL			ST_XANGLE		{ INPORT; EDITPORT; UNIT DEGREE; MIN 0.0; MAX 360.0; }
		REAL			ST_YANGLE		{ INPORT; EDITPORT; UNIT DEGREE; MIN 0.0; MAX 360.0; }
		REAL			ST_XSIZE		{ INPORT; EDITPORT; UNIT METER; MIN 0.0; }
		REAL			ST_YSIZE		{ INPORT; EDITPORT; UNIT METER; MIN 0.0; }
		REAL      ST_DIST		  { INPORT; EDITPORT; UNIT METER; MIN 0.0; }
		REAL			ST_DISTVAR  { INPORT; EDITPORT; UNIT PERCENT; MIN 0.0; MAX 100.0; }
		REAL      ST_SPIN		  { INPORT; EDITPORT; MIN 0.0; }
		REAL			ST_SPINVAR  { INPORT; EDITPORT; UNIT PERCENT; MIN 0.0; MAX 100.0; }
		LONG			ST_SPINTYPE { INPORT; EDITPORT; 
														CYCLE
														{
															ST_SPINTYPE_RANDOM;
															ST_SPINTYPE_USER;
														}
													}
		VECTOR		ST_SPINAXIS { INPORT;	EDITPORT; }
														

		BOOL      	IN_ST_ON				{ INPORT; PORTONLY; }
		BASETIME   	IN_ST_ATIME			{ INPORT; PORTONLY; }
		MATRIX			IN_ST_ALIGNMENT { INPORT; PORTONLY; }
		VECTOR			IN_ST_VELOCITY  { INPORT; PORTONLY; }
		VECTOR			IN_ST_POSITION	{ INPORT; PORTONLY; STATICPORT; CREATEPORT; }
		
		TP_PARTICLE OUT_ST_PARTICLE     { OUTPORT; PORTONLY; ITERATOR; }
		LONG				OUT_ST_PARTICLECOUNT{ OUTPORT; PORTONLY; ITERATOR; }
		LONG				OUT_ST_PARTICLENUM  { OUTPORT; PORTONLY; ITERATOR; }
	}
}
