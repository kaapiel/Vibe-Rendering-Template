//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21112126
// Cuda compilation tools, release 8.0, V8.0.43
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_30
.address_size 64

	// .globl	LensDistortionKernel
.global .texref inSrcTexture;
.const .align 4 .b8 kRGB32f_To_601YPbPr[36] = {135, 22, 153, 62, 162, 69, 22, 63, 213, 120, 233, 61, 33, 201, 44, 190, 111, 155, 169, 190, 0, 0, 0, 63, 0, 0, 0, 63, 70, 94, 214, 190, 232, 134, 166, 189};
.const .align 4 .b8 k601YPbPr_To_RGB32f[36] = {0, 0, 128, 63, 0, 0, 0, 0, 188, 116, 179, 63, 0, 0, 128, 63, 152, 50, 176, 190, 158, 209, 54, 191, 0, 0, 128, 63, 229, 208, 226, 63, 0, 0, 0, 0};
.const .align 4 .b8 kRGB32f_To_601YCbCr[36] = {70, 246, 130, 66, 145, 141, 0, 67, 94, 186, 199, 65, 33, 48, 23, 194, 240, 103, 148, 194, 0, 0, 224, 66, 0, 0, 224, 66, 111, 146, 187, 194, 70, 182, 145, 193};
.const .align 4 .b8 k601YCbCr_To_RGB32f[36] = {37, 160, 149, 59, 0, 0, 0, 0, 182, 23, 205, 59, 37, 160, 149, 59, 40, 15, 201, 186, 156, 239, 80, 187, 37, 160, 149, 59, 236, 155, 1, 60, 0, 0, 0, 0};
.const .align 4 .b8 kRGB8u_To_601YCbCr[36] = {219, 121, 131, 62, 152, 14, 1, 63, 18, 131, 200, 61, 174, 199, 23, 190, 238, 252, 148, 190, 197, 224, 224, 62, 197, 224, 224, 62, 217, 78, 188, 190, 174, 71, 146, 189};
.const .align 4 .b8 k601YCbCr_To_RGB8u[36] = {127, 10, 149, 63, 0, 0, 0, 0, 160, 74, 204, 63, 127, 10, 149, 63, 254, 148, 200, 190, 184, 30, 80, 191, 127, 10, 149, 63, 78, 26, 1, 64, 0, 0, 0, 0};
.const .align 4 .b8 kRGB8u_To_601YCbCrFullRange[36] = {135, 22, 153, 62, 162, 69, 22, 63, 213, 120, 233, 61, 166, 27, 44, 190, 39, 241, 168, 190, 250, 254, 254, 62, 250, 254, 254, 62, 43, 135, 213, 190, 59, 223, 165, 189};
.const .align 4 .b8 k601YCbCrFullRange_To_RGB8u[36] = {0, 0, 128, 63, 0, 0, 0, 0, 72, 193, 178, 63, 0, 0, 128, 63, 143, 130, 175, 190, 225, 26, 54, 191, 0, 0, 128, 63, 20, 238, 225, 63, 0, 0, 0, 0};
.const .align 4 .b8 kRGB32f_To_601YCbCrFullRange[36] = {113, 125, 152, 66, 92, 175, 21, 67, 92, 143, 232, 65, 158, 111, 43, 194, 49, 72, 168, 194, 0, 0, 254, 66, 0, 0, 254, 66, 170, 177, 212, 194, 88, 57, 165, 193};
.const .align 4 .b8 k601YCbCrFullRange_To_RGB32f[36] = {129, 128, 128, 59, 0, 0, 0, 0, 188, 116, 179, 59, 129, 128, 128, 59, 194, 50, 176, 186, 179, 209, 54, 187, 129, 128, 128, 59, 229, 208, 226, 59, 0, 0, 0, 0};
.const .align 4 .b8 kRGB32f_To_709YPbPr[36] = {208, 179, 89, 62, 89, 23, 55, 63, 152, 221, 147, 61, 186, 164, 234, 189, 210, 86, 197, 190, 0, 0, 0, 63, 0, 0, 0, 63, 190, 134, 232, 190, 16, 202, 59, 189};
.const .align 4 .b8 k709YPbPr_To_RGB32f[36] = {0, 0, 128, 63, 0, 0, 0, 0, 12, 147, 201, 63, 0, 0, 128, 63, 221, 209, 63, 190, 243, 173, 239, 190, 0, 0, 128, 63, 77, 132, 237, 63, 0, 0, 0, 0};
.const .align 4 .b8 kRGB32f_To_709YCbCr[36] = {106, 60, 58, 66, 6, 161, 28, 67, 244, 253, 124, 65, 223, 79, 205, 193, 8, 172, 172, 194, 0, 0, 224, 66, 0, 0, 224, 66, 195, 117, 203, 194, 236, 81, 36, 193};
.const .align 4 .b8 k709YCbCr_To_RGB32f[36] = {37, 160, 149, 59, 0, 0, 0, 0, 239, 94, 230, 59, 37, 160, 149, 59, 33, 57, 91, 186, 178, 245, 8, 187, 37, 160, 149, 59, 82, 185, 7, 60, 0, 0, 0, 0};
.const .align 4 .b8 k709YCbCrFullRange_To_RGB32f[36] = {131, 128, 128, 59, 0, 0, 0, 0, 28, 147, 201, 59, 131, 128, 128, 59, 61, 210, 63, 186, 248, 173, 239, 186, 131, 128, 128, 59, 82, 132, 237, 59, 0, 0, 0, 0};
.const .align 4 .b8 kRGB8u_To_709YCbCr[36] = {207, 247, 58, 62, 53, 62, 29, 63, 231, 251, 125, 61, 184, 30, 206, 189, 23, 89, 173, 190, 197, 224, 224, 62, 197, 224, 224, 62, 12, 66, 204, 190, 195, 245, 36, 189};
.const .align 4 .b8 k709YCbCr_To_RGB8u[36] = {127, 10, 149, 63, 0, 0, 0, 0, 147, 120, 229, 63, 127, 10, 149, 63, 53, 94, 90, 190, 205, 108, 8, 191, 127, 10, 149, 63, 154, 49, 7, 64, 0, 0, 0, 0};
.const .align 4 .b8 k709YCbCr_To_601YCbCr[36] = {0, 0, 128, 63, 23, 100, 203, 61, 1, 77, 68, 62, 0, 0, 0, 0, 18, 103, 125, 63, 10, 158, 226, 189, 0, 0, 0, 0, 61, 98, 148, 189, 249, 191, 123, 63};
.const .align 4 .b8 k601YCbCr_To_709YCbCr[36] = {0, 0, 128, 63, 122, 165, 236, 189, 179, 237, 84, 190, 0, 0, 0, 0, 204, 98, 130, 63, 216, 188, 234, 61, 0, 0, 0, 0, 74, 179, 153, 61, 234, 61, 131, 63};
.const .align 4 .b8 kYCbCrOffset[12] = {0, 0, 128, 65, 0, 0, 0, 67, 0, 0, 0, 67};
.const .align 4 .b8 kYCbCrFullRangeOffset[12] = {0, 0, 0, 0, 0, 0, 0, 67, 0, 0, 0, 67};
.const .align 4 .u32 kRandMax = 32767;

.visible .entry LensDistortionKernel(
	.param .u64 LensDistortionKernel_param_0,
	.param .u64 LensDistortionKernel_param_1,
	.param .u32 LensDistortionKernel_param_2,
	.param .u32 LensDistortionKernel_param_3,
	.param .u32 LensDistortionKernel_param_4,
	.param .u32 LensDistortionKernel_param_5,
	.param .f32 LensDistortionKernel_param_6,
	.param .f32 LensDistortionKernel_param_7,
	.param .f32 LensDistortionKernel_param_8,
	.param .f32 LensDistortionKernel_param_9,
	.param .f32 LensDistortionKernel_param_10,
	.param .u32 LensDistortionKernel_param_11,
	.param .align 16 .b8 LensDistortionKernel_param_12[16]
)
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<71>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [LensDistortionKernel_param_1];
	ld.param.u32 	%r3, [LensDistortionKernel_param_2];
	ld.param.u32 	%r4, [LensDistortionKernel_param_3];
	ld.param.u32 	%r5, [LensDistortionKernel_param_4];
	ld.param.u32 	%r6, [LensDistortionKernel_param_5];
	ld.param.f32 	%f17, [LensDistortionKernel_param_6];
	ld.param.f32 	%f18, [LensDistortionKernel_param_7];
	ld.param.f32 	%f19, [LensDistortionKernel_param_8];
	ld.param.f32 	%f20, [LensDistortionKernel_param_9];
	ld.param.f32 	%f21, [LensDistortionKernel_param_10];
	ld.param.u32 	%r7, [LensDistortionKernel_param_11];
	ld.param.f32 	%f25, [LensDistortionKernel_param_12+12];
	ld.param.f32 	%f24, [LensDistortionKernel_param_12+8];
	ld.param.f32 	%f23, [LensDistortionKernel_param_12+4];
	ld.param.f32 	%f22, [LensDistortionKernel_param_12];
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r2, %r11, %r12, %r13;
	setp.lt.s32	%p1, %r1, %r5;
	setp.lt.s32	%p2, %r2, %r6;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB0_10;
	bra.uni 	BB0_1;

BB0_1:
	shr.u32 	%r14, %r5, 31;
	add.s32 	%r15, %r5, %r14;
	shr.s32 	%r16, %r15, 1;
	sub.s32 	%r17, %r1, %r16;
	cvt.rn.f32.s32	%f26, %r17;
	shr.u32 	%r18, %r6, 31;
	add.s32 	%r19, %r6, %r18;
	shr.s32 	%r20, %r19, 1;
	sub.s32 	%r21, %r2, %r20;
	cvt.rn.f32.s32	%f27, %r21;
	mul.ftz.f32 	%f28, %f26, %f26;
	fma.rn.ftz.f32 	%f29, %f27, %f27, %f28;
	sqrt.approx.ftz.f32 	%f30, %f29;
	mul.lo.s32 	%r22, %r5, %r5;
	shr.u32 	%r23, %r22, 2;
	mul.lo.s32 	%r24, %r6, %r6;
	shr.u32 	%r25, %r24, 2;
	add.s32 	%r26, %r25, %r23;
	cvt.rn.f32.s32	%f31, %r26;
	sqrt.approx.ftz.f32 	%f32, %f31;
	div.approx.ftz.f32 	%f33, %f30, %f32;
	mul.ftz.f32 	%f34, %f28, 0f40400000;
	fma.rn.ftz.f32 	%f35, %f27, %f27, %f34;
	div.approx.ftz.f32 	%f36, %f35, %f32;
	mul.ftz.f32 	%f37, %f26, %f17;
	mul.ftz.f32 	%f38, %f36, %f18;
	fma.rn.ftz.f32 	%f39, %f37, %f33, %f38;
	fma.rn.ftz.f32 	%f40, %f30, %f20, %f39;
	mul.ftz.f32 	%f41, %f27, %f17;
	mul.ftz.f32 	%f42, %f36, %f19;
	fma.rn.ftz.f32 	%f43, %f41, %f33, %f42;
	fma.rn.ftz.f32 	%f44, %f30, %f21, %f43;
	add.ftz.f32 	%f45, %f26, %f40;
	cvt.rn.f32.s32	%f46, %r16;
	add.ftz.f32 	%f1, %f46, %f45;
	add.ftz.f32 	%f47, %f27, %f44;
	cvt.rn.f32.s32	%f48, %r20;
	add.ftz.f32 	%f2, %f48, %f47;
	setp.leu.ftz.f32	%p4, %f1, 0fBF000000;
	@%p4 bra 	BB0_4;

	cvt.rn.f32.s32	%f49, %r5;
	add.ftz.f32 	%f3, %f49, 0f3F000000;
	setp.lt.ftz.f32	%p5, %f1, %f3;
	setp.gt.ftz.f32	%p6, %f2, 0fBF000000;
	and.pred  	%p7, %p5, %p6;
	@!%p7 bra 	BB0_4;
	bra.uni 	BB0_3;

BB0_3:
	cvt.rn.f32.s32	%f50, %r6;
	add.ftz.f32 	%f4, %f50, 0f3F000000;
	setp.lt.ftz.f32	%p8, %f2, %f4;
	@%p8 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.ftz.f32 	%f55, %f2, 0f3F000000;
	add.ftz.f32 	%f56, %f1, 0f3F000000;
	tex.2d.v4.f32.f32	{%f68, %f67, %f69, %f57}, [inSrcTexture, {%f56, %f55}];
	cvt.ftz.sat.f32.f32	%f58, %f56;
	sub.ftz.f32 	%f59, %f3, %f1;
	cvt.ftz.sat.f32.f32	%f60, %f59;
	mul.ftz.f32 	%f61, %f58, %f60;
	cvt.ftz.sat.f32.f32	%f62, %f55;
	mul.ftz.f32 	%f63, %f61, %f62;
	sub.ftz.f32 	%f64, %f4, %f2;
	cvt.ftz.sat.f32.f32	%f65, %f64;
	mul.ftz.f32 	%f66, %f63, %f65;
	mul.ftz.f32 	%f70, %f57, %f66;
	bra.uni 	BB0_7;

BB0_4:
	setp.eq.s32	%p9, %r7, 0;
	mov.f32 	%f70, 0f00000000;
	mov.f32 	%f69, %f70;
	mov.f32 	%f68, %f70;
	mov.f32 	%f67, %f70;
	@%p9 bra 	BB0_7;

	mov.f32 	%f68, %f22;
	mov.f32 	%f67, %f23;
	mov.f32 	%f69, %f24;
	mov.f32 	%f70, %f25;

BB0_7:
	mad.lo.s32 	%r27, %r2, %r3, %r1;
	cvt.s64.s32	%rd1, %r27;
	setp.eq.s32	%p10, %r4, 0;
	@%p10 bra 	BB0_9;

	cvta.to.global.u64 	%rd4, %rd2;
	shl.b64 	%rd5, %rd1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	st.global.v4.f32 	[%rd6], {%f68, %f67, %f69, %f70};
	bra.uni 	BB0_10;

BB0_9:
	cvta.to.global.u64 	%rd7, %rd2;
	shl.b64 	%rd8, %rd1, 3;
	add.s64 	%rd9, %rd7, %rd8;
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f70;
	mov.b16 	%rs1, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f69;
	mov.b16 	%rs2, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f67;
	mov.b16 	%rs3, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f68;
	mov.b16 	%rs4, %temp;
}
	st.global.v4.u16 	[%rd9], {%rs4, %rs3, %rs2, %rs1};

BB0_10:
	ret;
}


