//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21112126
// Cuda compilation tools, release 8.0, V8.0.43
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_30
.address_size 64

	// .globl	LumaCurve_MaskKernel
.const .align 4 .b8 inSpline[196];
.const .align 4 .b8 kRGB32f_To_601YPbPr[36] = {135, 22, 153, 62, 162, 69, 22, 63, 213, 120, 233, 61, 33, 201, 44, 190, 111, 155, 169, 190, 0, 0, 0, 63, 0, 0, 0, 63, 70, 94, 214, 190, 232, 134, 166, 189};
.const .align 4 .b8 k601YPbPr_To_RGB32f[36] = {0, 0, 128, 63, 0, 0, 0, 0, 188, 116, 179, 63, 0, 0, 128, 63, 152, 50, 176, 190, 158, 209, 54, 191, 0, 0, 128, 63, 229, 208, 226, 63, 0, 0, 0, 0};
.const .align 4 .b8 kRGB32f_To_601YCbCr[36] = {70, 246, 130, 66, 145, 141, 0, 67, 94, 186, 199, 65, 33, 48, 23, 194, 240, 103, 148, 194, 0, 0, 224, 66, 0, 0, 224, 66, 111, 146, 187, 194, 70, 182, 145, 193};
.const .align 4 .b8 k601YCbCr_To_RGB32f[36] = {37, 160, 149, 59, 0, 0, 0, 0, 182, 23, 205, 59, 37, 160, 149, 59, 40, 15, 201, 186, 156, 239, 80, 187, 37, 160, 149, 59, 236, 155, 1, 60, 0, 0, 0, 0};
.const .align 4 .b8 kRGB8u_To_601YCbCr[36] = {219, 121, 131, 62, 152, 14, 1, 63, 18, 131, 200, 61, 174, 199, 23, 190, 238, 252, 148, 190, 197, 224, 224, 62, 197, 224, 224, 62, 217, 78, 188, 190, 174, 71, 146, 189};
.const .align 4 .b8 k601YCbCr_To_RGB8u[36] = {127, 10, 149, 63, 0, 0, 0, 0, 160, 74, 204, 63, 127, 10, 149, 63, 254, 148, 200, 190, 184, 30, 80, 191, 127, 10, 149, 63, 78, 26, 1, 64, 0, 0, 0, 0};
.const .align 4 .b8 kRGB8u_To_601YCbCrFullRange[36] = {135, 22, 153, 62, 162, 69, 22, 63, 213, 120, 233, 61, 166, 27, 44, 190, 39, 241, 168, 190, 250, 254, 254, 62, 250, 254, 254, 62, 43, 135, 213, 190, 59, 223, 165, 189};
.const .align 4 .b8 k601YCbCrFullRange_To_RGB8u[36] = {0, 0, 128, 63, 0, 0, 0, 0, 72, 193, 178, 63, 0, 0, 128, 63, 143, 130, 175, 190, 225, 26, 54, 191, 0, 0, 128, 63, 20, 238, 225, 63, 0, 0, 0, 0};
.const .align 4 .b8 kRGB32f_To_601YCbCrFullRange[36] = {113, 125, 152, 66, 92, 175, 21, 67, 92, 143, 232, 65, 158, 111, 43, 194, 49, 72, 168, 194, 0, 0, 254, 66, 0, 0, 254, 66, 170, 177, 212, 194, 88, 57, 165, 193};
.const .align 4 .b8 k601YCbCrFullRange_To_RGB32f[36] = {129, 128, 128, 59, 0, 0, 0, 0, 188, 116, 179, 59, 129, 128, 128, 59, 194, 50, 176, 186, 179, 209, 54, 187, 129, 128, 128, 59, 229, 208, 226, 59, 0, 0, 0, 0};
.const .align 4 .b8 kRGB32f_To_709YPbPr[36] = {208, 179, 89, 62, 89, 23, 55, 63, 152, 221, 147, 61, 186, 164, 234, 189, 210, 86, 197, 190, 0, 0, 0, 63, 0, 0, 0, 63, 190, 134, 232, 190, 16, 202, 59, 189};
.const .align 4 .b8 k709YPbPr_To_RGB32f[36] = {0, 0, 128, 63, 0, 0, 0, 0, 12, 147, 201, 63, 0, 0, 128, 63, 221, 209, 63, 190, 243, 173, 239, 190, 0, 0, 128, 63, 77, 132, 237, 63, 0, 0, 0, 0};
.const .align 4 .b8 kRGB32f_To_709YCbCr[36] = {106, 60, 58, 66, 6, 161, 28, 67, 244, 253, 124, 65, 223, 79, 205, 193, 8, 172, 172, 194, 0, 0, 224, 66, 0, 0, 224, 66, 195, 117, 203, 194, 236, 81, 36, 193};
.const .align 4 .b8 k709YCbCr_To_RGB32f[36] = {37, 160, 149, 59, 0, 0, 0, 0, 239, 94, 230, 59, 37, 160, 149, 59, 33, 57, 91, 186, 178, 245, 8, 187, 37, 160, 149, 59, 82, 185, 7, 60, 0, 0, 0, 0};
.const .align 4 .b8 k709YCbCrFullRange_To_RGB32f[36] = {131, 128, 128, 59, 0, 0, 0, 0, 28, 147, 201, 59, 131, 128, 128, 59, 61, 210, 63, 186, 248, 173, 239, 186, 131, 128, 128, 59, 82, 132, 237, 59, 0, 0, 0, 0};
.const .align 4 .b8 kRGB8u_To_709YCbCr[36] = {207, 247, 58, 62, 53, 62, 29, 63, 231, 251, 125, 61, 184, 30, 206, 189, 23, 89, 173, 190, 197, 224, 224, 62, 197, 224, 224, 62, 12, 66, 204, 190, 195, 245, 36, 189};
.const .align 4 .b8 k709YCbCr_To_RGB8u[36] = {127, 10, 149, 63, 0, 0, 0, 0, 147, 120, 229, 63, 127, 10, 149, 63, 53, 94, 90, 190, 205, 108, 8, 191, 127, 10, 149, 63, 154, 49, 7, 64, 0, 0, 0, 0};
.const .align 4 .b8 k709YCbCr_To_601YCbCr[36] = {0, 0, 128, 63, 23, 100, 203, 61, 1, 77, 68, 62, 0, 0, 0, 0, 18, 103, 125, 63, 10, 158, 226, 189, 0, 0, 0, 0, 61, 98, 148, 189, 249, 191, 123, 63};
.const .align 4 .b8 k601YCbCr_To_709YCbCr[36] = {0, 0, 128, 63, 122, 165, 236, 189, 179, 237, 84, 190, 0, 0, 0, 0, 204, 98, 130, 63, 216, 188, 234, 61, 0, 0, 0, 0, 74, 179, 153, 61, 234, 61, 131, 63};
.const .align 4 .b8 kYCbCrOffset[12] = {0, 0, 128, 65, 0, 0, 0, 67, 0, 0, 0, 67};
.const .align 4 .b8 kYCbCrFullRangeOffset[12] = {0, 0, 0, 0, 0, 0, 0, 67, 0, 0, 0, 67};

.visible .entry LumaCurve_MaskKernel(
	.param .u64 LumaCurve_MaskKernel_param_0,
	.param .u64 LumaCurve_MaskKernel_param_1,
	.param .u32 LumaCurve_MaskKernel_param_2,
	.param .u32 LumaCurve_MaskKernel_param_3,
	.param .u32 LumaCurve_MaskKernel_param_4,
	.param .u32 LumaCurve_MaskKernel_param_5,
	.param .u32 LumaCurve_MaskKernel_param_6,
	.param .u32 LumaCurve_MaskKernel_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [LumaCurve_MaskKernel_param_0];
	ld.param.u64 	%rd3, [LumaCurve_MaskKernel_param_1];
	ld.param.u32 	%r3, [LumaCurve_MaskKernel_param_2];
	ld.param.u32 	%r4, [LumaCurve_MaskKernel_param_3];
	ld.param.u32 	%r5, [LumaCurve_MaskKernel_param_4];
	ld.param.u32 	%r7, [LumaCurve_MaskKernel_param_5];
	ld.param.u32 	%r8, [LumaCurve_MaskKernel_param_6];
	ld.param.u32 	%r6, [LumaCurve_MaskKernel_param_7];
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r9, %r10, %r11;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %ctaid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r2, %r12, %r13, %r14;
	setp.lt.s32	%p1, %r1, %r7;
	setp.lt.s32	%p2, %r2, %r8;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB0_6;
	bra.uni 	BB0_1;

BB0_1:
	setp.eq.s32	%p4, %r6, 0;
	mov.f32 	%f24, 0f3F800000;
	@%p4 bra 	BB0_3;

	cvta.to.global.u64 	%rd4, %rd3;
	mad.lo.s32 	%r15, %r2, %r4, %r1;
	mul.wide.s32 	%rd5, %r15, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f24, [%rd6];

BB0_3:
	mad.lo.s32 	%r16, %r2, %r3, %r1;
	ld.const.f32 	%f7, [k601YPbPr_To_RGB32f];
	ld.const.f32 	%f8, [k601YPbPr_To_RGB32f+4];
	mul.ftz.f32 	%f9, %f8, 0f00000000;
	fma.rn.ftz.f32 	%f10, %f24, %f7, %f9;
	ld.const.f32 	%f11, [k601YPbPr_To_RGB32f+8];
	fma.rn.ftz.f32 	%f3, %f11, 0f00000000, %f10;
	ld.const.f32 	%f12, [k601YPbPr_To_RGB32f+12];
	ld.const.f32 	%f13, [k601YPbPr_To_RGB32f+16];
	mul.ftz.f32 	%f14, %f13, 0f00000000;
	fma.rn.ftz.f32 	%f15, %f24, %f12, %f14;
	ld.const.f32 	%f16, [k601YPbPr_To_RGB32f+20];
	fma.rn.ftz.f32 	%f4, %f16, 0f00000000, %f15;
	ld.const.f32 	%f17, [k601YPbPr_To_RGB32f+24];
	ld.const.f32 	%f18, [k601YPbPr_To_RGB32f+28];
	mul.ftz.f32 	%f19, %f18, 0f00000000;
	fma.rn.ftz.f32 	%f20, %f24, %f17, %f19;
	ld.const.f32 	%f21, [k601YPbPr_To_RGB32f+32];
	fma.rn.ftz.f32 	%f5, %f21, 0f00000000, %f20;
	cvt.s64.s32	%rd1, %r16;
	setp.eq.s32	%p5, %r5, 0;
	@%p5 bra 	BB0_5;

	cvta.to.global.u64 	%rd7, %rd2;
	shl.b64 	%rd8, %rd1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	mov.f32 	%f22, 0f3F800000;
	st.global.v4.f32 	[%rd9], {%f5, %f4, %f3, %f22};
	bra.uni 	BB0_6;

BB0_5:
	cvta.to.global.u64 	%rd10, %rd2;
	shl.b64 	%rd11, %rd1, 3;
	add.s64 	%rd12, %rd10, %rd11;
	mov.f32 	%f23, 0f3F800000;
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f23;
	mov.b16 	%rs1, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f3;
	mov.b16 	%rs2, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f4;
	mov.b16 	%rs3, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f5;
	mov.b16 	%rs4, %temp;
}
	st.global.v4.u16 	[%rd12], {%rs4, %rs3, %rs2, %rs1};

BB0_6:
	ret;
}

	// .globl	LumaCurve_LumaKernel
.visible .entry LumaCurve_LumaKernel(
	.param .u64 LumaCurve_LumaKernel_param_0,
	.param .u64 LumaCurve_LumaKernel_param_1,
	.param .u64 LumaCurve_LumaKernel_param_2,
	.param .u32 LumaCurve_LumaKernel_param_3,
	.param .u32 LumaCurve_LumaKernel_param_4,
	.param .u32 LumaCurve_LumaKernel_param_5,
	.param .u32 LumaCurve_LumaKernel_param_6,
	.param .u32 LumaCurve_LumaKernel_param_7,
	.param .u32 LumaCurve_LumaKernel_param_8
)
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<13>;
	.reg .f32 	%f<104>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<37>;


	ld.param.u64 	%rd6, [LumaCurve_LumaKernel_param_0];
	ld.param.u64 	%rd7, [LumaCurve_LumaKernel_param_1];
	ld.param.u32 	%r9, [LumaCurve_LumaKernel_param_3];
	ld.param.u32 	%r10, [LumaCurve_LumaKernel_param_4];
	ld.param.u32 	%r11, [LumaCurve_LumaKernel_param_5];
	ld.param.u32 	%r13, [LumaCurve_LumaKernel_param_6];
	ld.param.u32 	%r14, [LumaCurve_LumaKernel_param_7];
	ld.param.u32 	%r12, [LumaCurve_LumaKernel_param_8];
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	mov.u32 	%r18, %ntid.y;
	mov.u32 	%r19, %ctaid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r18, %r19, %r20;
	setp.lt.s32	%p1, %r1, %r13;
	setp.lt.s32	%p2, %r2, %r14;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB1_28;
	bra.uni 	BB1_1;

BB1_1:
	cvta.to.global.u64 	%rd8, %rd6;
	mad.lo.s32 	%r21, %r2, %r9, %r1;
	cvt.s64.s32	%rd1, %r21;
	mul.wide.s32 	%rd9, %r21, 16;
	add.s64 	%rd2, %rd8, %rd9;
	setp.eq.s32	%p4, %r11, 0;
	@%p4 bra 	BB1_3;

	ld.global.v4.f32 	{%f38, %f39, %f40, %f41}, [%rd2];
	mov.f32 	%f4, %f41;
	mov.f32 	%f97, %f40;
	mov.f32 	%f96, %f39;
	mov.f32 	%f95, %f38;
	bra.uni 	BB1_4;

BB1_3:
	shl.b64 	%rd11, %rd1, 3;
	add.s64 	%rd12, %rd8, %rd11;
	ld.global.v4.u16 	{%rs1, %rs2, %rs3, %rs4}, [%rd12];
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs1;
	cvt.f32.f16 	%f95, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs2;
	cvt.f32.f16 	%f96, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs3;
	cvt.f32.f16 	%f97, %temp;
	}

BB1_4:
	ld.const.f32 	%f43, [kRGB32f_To_601YPbPr];
	ld.const.f32 	%f44, [kRGB32f_To_601YPbPr+4];
	mul.ftz.f32 	%f45, %f96, %f44;
	fma.rn.ftz.f32 	%f46, %f97, %f43, %f45;
	ld.const.f32 	%f47, [kRGB32f_To_601YPbPr+8];
	fma.rn.ftz.f32 	%f102, %f95, %f47, %f46;
	setp.eq.s32	%p5, %r12, 0;
	mov.f32 	%f98, 0f3F800000;
	@%p5 bra 	BB1_6;

	cvta.to.global.u64 	%rd13, %rd7;
	mad.lo.s32 	%r22, %r2, %r10, %r1;
	mul.wide.s32 	%rd14, %r22, 4;
	add.s64 	%rd15, %rd13, %rd14;
	ld.global.f32 	%f98, [%rd15];

BB1_6:
	setp.leu.ftz.f32	%p6, %f98, 0f3A83126F;
	@%p6 bra 	BB1_25;

	ld.const.f32 	%f99, [inSpline];
	setp.lt.ftz.f32	%p7, %f102, %f99;
	@%p7 bra 	BB1_19;
	bra.uni 	BB1_8;

BB1_19:
	ld.const.f32 	%f28, [inSpline+64];
	setp.eq.ftz.f32	%p16, %f28, 0f00000000;
	@%p16 bra 	BB1_23;
	bra.uni 	BB1_20;

BB1_23:
	sub.ftz.f32 	%f103, %f102, %f99;
	bra.uni 	BB1_24;

BB1_8:
	mov.u64 	%rd16, inSpline;
	ld.const.u32 	%r23, [inSpline+192];
	add.s32 	%r29, %r23, -1;
	mul.wide.u32 	%rd17, %r29, 4;
	add.s64 	%rd3, %rd16, %rd17;
	ld.const.f32 	%f100, [%rd3];
	setp.gt.ftz.f32	%p8, %f102, %f100;
	@%p8 bra 	BB1_14;
	bra.uni 	BB1_9;

BB1_14:
	ld.const.f32 	%f24, [%rd3+64];
	setp.eq.ftz.f32	%p13, %f24, 0f00000000;
	@%p13 bra 	BB1_18;
	bra.uni 	BB1_15;

BB1_18:
	sub.ftz.f32 	%f103, %f100, %f102;
	bra.uni 	BB1_24;

BB1_9:
	mov.u64 	%rd36, 0;
	mov.u32 	%r28, 0;
	setp.lt.u32	%p9, %r29, 2;
	@%p9 bra 	BB1_12;

BB1_10:
	add.s32 	%r25, %r29, %r28;
	shr.u32 	%r26, %r25, 1;
	mul.wide.u32 	%rd19, %r26, 4;
	add.s64 	%rd21, %rd16, %rd19;
	ld.const.f32 	%f48, [%rd21];
	setp.gt.ftz.f32	%p10, %f48, %f102;
	selp.b32	%r28, %r28, %r26, %p10;
	selp.b32	%r29, %r26, %r29, %p10;
	sub.s32 	%r27, %r29, %r28;
	setp.gt.u32	%p11, %r27, 1;
	@%p11 bra 	BB1_10;

	cvt.u64.u32	%rd36, %r28;
	mul.wide.u32 	%rd22, %r29, 4;
	add.s64 	%rd24, %rd16, %rd22;
	ld.const.f32 	%f100, [%rd24];
	mul.wide.u32 	%rd25, %r28, 4;
	add.s64 	%rd26, %rd16, %rd25;
	ld.const.f32 	%f99, [%rd26];

BB1_12:
	sub.ftz.f32 	%f22, %f100, %f99;
	setp.eq.ftz.f32	%p12, %f22, 0f00000000;
	mov.f32 	%f103, %f102;
	@%p12 bra 	BB1_24;

	sub.ftz.f32 	%f49, %f100, %f102;
	div.approx.ftz.f32 	%f50, %f49, %f22;
	sub.ftz.f32 	%f51, %f102, %f99;
	div.approx.ftz.f32 	%f52, %f51, %f22;
	shl.b64 	%rd27, %rd36, 2;
	add.s64 	%rd29, %rd16, 64;
	add.s64 	%rd30, %rd29, %rd27;
	ld.const.f32 	%f53, [%rd30];
	mul.wide.u32 	%rd31, %r29, 4;
	add.s64 	%rd32, %rd29, %rd31;
	ld.const.f32 	%f54, [%rd32];
	mul.ftz.f32 	%f55, %f52, %f54;
	fma.rn.ftz.f32 	%f56, %f50, %f53, %f55;
	mul.ftz.f32 	%f57, %f50, %f50;
	mul.ftz.f32 	%f58, %f50, %f57;
	sub.ftz.f32 	%f59, %f58, %f50;
	ld.const.f32 	%f60, [%rd30+64];
	mul.ftz.f32 	%f61, %f52, %f52;
	mul.ftz.f32 	%f62, %f52, %f61;
	sub.ftz.f32 	%f63, %f62, %f52;
	ld.const.f32 	%f64, [%rd32+64];
	mul.ftz.f32 	%f65, %f63, %f64;
	fma.rn.ftz.f32 	%f66, %f59, %f60, %f65;
	mul.ftz.f32 	%f67, %f22, %f22;
	mul.ftz.f32 	%f68, %f67, %f66;
	mov.f32 	%f69, 0f40C00000;
	div.approx.ftz.f32 	%f70, %f68, %f69;
	add.ftz.f32 	%f103, %f56, %f70;
	bra.uni 	BB1_24;

BB1_20:
	setp.eq.ftz.f32	%p17, %f28, 0f3F800000;
	@%p17 bra 	BB1_22;
	bra.uni 	BB1_21;

BB1_22:
	add.ftz.f32 	%f76, %f99, 0f3F800000;
	sub.ftz.f32 	%f103, %f76, %f102;
	bra.uni 	BB1_24;

BB1_15:
	setp.eq.ftz.f32	%p14, %f24, 0f3F800000;
	@%p14 bra 	BB1_17;
	bra.uni 	BB1_16;

BB1_17:
	add.ftz.f32 	%f74, %f102, 0f3F800000;
	sub.ftz.f32 	%f103, %f74, %f100;
	bra.uni 	BB1_24;

BB1_21:
	setp.ge.ftz.f32	%p18, %f102, 0f00000000;
	add.ftz.f32 	%f75, %f102, %f28;
	selp.f32	%f103, %f28, %f75, %p18;
	bra.uni 	BB1_24;

BB1_16:
	setp.le.ftz.f32	%p15, %f102, 0f3F800000;
	mov.f32 	%f71, 0f3F800000;
	sub.ftz.f32 	%f72, %f71, %f24;
	sub.ftz.f32 	%f73, %f102, %f72;
	selp.f32	%f103, %f24, %f73, %p15;

BB1_24:
	sub.ftz.f32 	%f77, %f103, %f102;
	fma.rn.ftz.f32 	%f102, %f98, %f77, %f102;

BB1_25:
	ld.const.f32 	%f78, [k601YPbPr_To_RGB32f];
	ld.const.f32 	%f79, [k601YPbPr_To_RGB32f+4];
	mul.ftz.f32 	%f80, %f79, 0f00000000;
	fma.rn.ftz.f32 	%f81, %f102, %f78, %f80;
	ld.const.f32 	%f82, [k601YPbPr_To_RGB32f+8];
	fma.rn.ftz.f32 	%f35, %f82, 0f00000000, %f81;
	ld.const.f32 	%f83, [k601YPbPr_To_RGB32f+12];
	ld.const.f32 	%f84, [k601YPbPr_To_RGB32f+16];
	mul.ftz.f32 	%f85, %f84, 0f00000000;
	fma.rn.ftz.f32 	%f86, %f102, %f83, %f85;
	ld.const.f32 	%f87, [k601YPbPr_To_RGB32f+20];
	fma.rn.ftz.f32 	%f36, %f87, 0f00000000, %f86;
	ld.const.f32 	%f88, [k601YPbPr_To_RGB32f+24];
	ld.const.f32 	%f89, [k601YPbPr_To_RGB32f+28];
	mul.ftz.f32 	%f90, %f89, 0f00000000;
	fma.rn.ftz.f32 	%f91, %f102, %f88, %f90;
	ld.const.f32 	%f92, [k601YPbPr_To_RGB32f+32];
	fma.rn.ftz.f32 	%f37, %f92, 0f00000000, %f91;
	@%p4 bra 	BB1_27;

	mov.f32 	%f93, 0f3F800000;
	st.global.v4.f32 	[%rd2], {%f37, %f36, %f35, %f93};
	bra.uni 	BB1_28;

BB1_27:
	shl.b64 	%rd34, %rd1, 3;
	add.s64 	%rd35, %rd8, %rd34;
	mov.f32 	%f94, 0f3F800000;
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f94;
	mov.b16 	%rs9, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f35;
	mov.b16 	%rs10, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f36;
	mov.b16 	%rs11, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f37;
	mov.b16 	%rs12, %temp;
}
	st.global.v4.u16 	[%rd35], {%rs12, %rs11, %rs10, %rs9};

BB1_28:
	ret;
}

	// .globl	LumaCurve_CompositeKernel
.visible .entry LumaCurve_CompositeKernel(
	.param .u64 LumaCurve_CompositeKernel_param_0,
	.param .u64 LumaCurve_CompositeKernel_param_1,
	.param .u64 LumaCurve_CompositeKernel_param_2,
	.param .u32 LumaCurve_CompositeKernel_param_3,
	.param .u32 LumaCurve_CompositeKernel_param_4,
	.param .u32 LumaCurve_CompositeKernel_param_5,
	.param .u32 LumaCurve_CompositeKernel_param_6,
	.param .u32 LumaCurve_CompositeKernel_param_7,
	.param .u32 LumaCurve_CompositeKernel_param_8
)
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<13>;
	.reg .f32 	%f<117>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<37>;


	ld.param.u64 	%rd6, [LumaCurve_CompositeKernel_param_0];
	ld.param.u64 	%rd7, [LumaCurve_CompositeKernel_param_1];
	ld.param.u32 	%r9, [LumaCurve_CompositeKernel_param_3];
	ld.param.u32 	%r10, [LumaCurve_CompositeKernel_param_4];
	ld.param.u32 	%r11, [LumaCurve_CompositeKernel_param_5];
	ld.param.u32 	%r13, [LumaCurve_CompositeKernel_param_6];
	ld.param.u32 	%r14, [LumaCurve_CompositeKernel_param_7];
	ld.param.u32 	%r12, [LumaCurve_CompositeKernel_param_8];
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	mov.u32 	%r18, %ntid.y;
	mov.u32 	%r19, %ctaid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r18, %r19, %r20;
	setp.lt.s32	%p1, %r1, %r13;
	setp.lt.s32	%p2, %r2, %r14;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB2_28;
	bra.uni 	BB2_1;

BB2_1:
	cvta.to.global.u64 	%rd8, %rd6;
	mad.lo.s32 	%r21, %r2, %r9, %r1;
	cvt.s64.s32	%rd1, %r21;
	mul.wide.s32 	%rd9, %r21, 16;
	add.s64 	%rd2, %rd8, %rd9;
	setp.eq.s32	%p4, %r11, 0;
	@%p4 bra 	BB2_3;

	ld.global.v4.f32 	{%f40, %f41, %f42, %f43}, [%rd2];
	mov.f32 	%f110, %f43;
	mov.f32 	%f109, %f42;
	mov.f32 	%f108, %f41;
	mov.f32 	%f107, %f40;
	bra.uni 	BB2_4;

BB2_3:
	shl.b64 	%rd11, %rd1, 3;
	add.s64 	%rd12, %rd8, %rd11;
	ld.global.v4.u16 	{%rs1, %rs2, %rs3, %rs4}, [%rd12];
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs1;
	cvt.f32.f16 	%f107, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs2;
	cvt.f32.f16 	%f108, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs3;
	cvt.f32.f16 	%f109, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs4;
	cvt.f32.f16 	%f110, %temp;
	}

BB2_4:
	ld.const.f32 	%f45, [kRGB32f_To_601YPbPr];
	ld.const.f32 	%f46, [kRGB32f_To_601YPbPr+4];
	mul.ftz.f32 	%f47, %f108, %f46;
	fma.rn.ftz.f32 	%f48, %f109, %f45, %f47;
	ld.const.f32 	%f49, [kRGB32f_To_601YPbPr+8];
	fma.rn.ftz.f32 	%f115, %f107, %f49, %f48;
	ld.const.f32 	%f50, [kRGB32f_To_601YPbPr+12];
	ld.const.f32 	%f51, [kRGB32f_To_601YPbPr+16];
	mul.ftz.f32 	%f52, %f108, %f51;
	fma.rn.ftz.f32 	%f53, %f109, %f50, %f52;
	ld.const.f32 	%f54, [kRGB32f_To_601YPbPr+20];
	fma.rn.ftz.f32 	%f14, %f107, %f54, %f53;
	ld.const.f32 	%f55, [kRGB32f_To_601YPbPr+24];
	ld.const.f32 	%f56, [kRGB32f_To_601YPbPr+28];
	mul.ftz.f32 	%f57, %f108, %f56;
	fma.rn.ftz.f32 	%f58, %f109, %f55, %f57;
	ld.const.f32 	%f59, [kRGB32f_To_601YPbPr+32];
	fma.rn.ftz.f32 	%f15, %f107, %f59, %f58;
	setp.eq.s32	%p5, %r12, 0;
	mov.f32 	%f111, 0f3F800000;
	@%p5 bra 	BB2_6;

	cvta.to.global.u64 	%rd13, %rd7;
	mad.lo.s32 	%r22, %r2, %r10, %r1;
	mul.wide.s32 	%rd14, %r22, 4;
	add.s64 	%rd15, %rd13, %rd14;
	ld.global.f32 	%f111, [%rd15];

BB2_6:
	setp.leu.ftz.f32	%p6, %f111, 0f3A83126F;
	@%p6 bra 	BB2_25;

	ld.const.f32 	%f112, [inSpline];
	setp.lt.ftz.f32	%p7, %f115, %f112;
	@%p7 bra 	BB2_19;
	bra.uni 	BB2_8;

BB2_19:
	ld.const.f32 	%f29, [inSpline+64];
	setp.eq.ftz.f32	%p16, %f29, 0f00000000;
	@%p16 bra 	BB2_23;
	bra.uni 	BB2_20;

BB2_23:
	sub.ftz.f32 	%f116, %f115, %f112;
	bra.uni 	BB2_24;

BB2_8:
	mov.u64 	%rd16, inSpline;
	ld.const.u32 	%r23, [inSpline+192];
	add.s32 	%r38, %r23, -1;
	mul.wide.u32 	%rd17, %r38, 4;
	add.s64 	%rd3, %rd16, %rd17;
	ld.const.f32 	%f113, [%rd3];
	setp.gt.ftz.f32	%p8, %f115, %f113;
	@%p8 bra 	BB2_14;
	bra.uni 	BB2_9;

BB2_14:
	ld.const.f32 	%f25, [%rd3+64];
	setp.eq.ftz.f32	%p13, %f25, 0f00000000;
	@%p13 bra 	BB2_18;
	bra.uni 	BB2_15;

BB2_18:
	sub.ftz.f32 	%f116, %f113, %f115;
	bra.uni 	BB2_24;

BB2_9:
	mov.u64 	%rd36, 0;
	mov.u32 	%r37, 0;
	setp.lt.u32	%p9, %r38, 2;
	@%p9 bra 	BB2_12;

BB2_10:
	add.s32 	%r25, %r38, %r37;
	shr.u32 	%r26, %r25, 1;
	mul.wide.u32 	%rd19, %r26, 4;
	add.s64 	%rd21, %rd16, %rd19;
	ld.const.f32 	%f60, [%rd21];
	setp.gt.ftz.f32	%p10, %f60, %f115;
	selp.b32	%r37, %r37, %r26, %p10;
	selp.b32	%r38, %r26, %r38, %p10;
	sub.s32 	%r27, %r38, %r37;
	setp.gt.u32	%p11, %r27, 1;
	@%p11 bra 	BB2_10;

	cvt.u64.u32	%rd36, %r37;
	mul.wide.u32 	%rd22, %r38, 4;
	add.s64 	%rd24, %rd16, %rd22;
	ld.const.f32 	%f113, [%rd24];
	mul.wide.u32 	%rd25, %r37, 4;
	add.s64 	%rd26, %rd16, %rd25;
	ld.const.f32 	%f112, [%rd26];

BB2_12:
	sub.ftz.f32 	%f61, %f113, %f112;
	setp.eq.ftz.f32	%p12, %f61, 0f00000000;
	mov.f32 	%f116, %f115;
	@%p12 bra 	BB2_24;

	sub.ftz.f32 	%f62, %f113, %f115;
	div.approx.ftz.f32 	%f64, %f62, %f61;
	sub.ftz.f32 	%f65, %f115, %f112;
	div.approx.ftz.f32 	%f66, %f65, %f61;
	shl.b64 	%rd27, %rd36, 2;
	add.s64 	%rd29, %rd16, 64;
	add.s64 	%rd30, %rd29, %rd27;
	ld.const.f32 	%f67, [%rd30];
	mul.wide.u32 	%rd31, %r38, 4;
	add.s64 	%rd32, %rd29, %rd31;
	ld.const.f32 	%f68, [%rd32];
	mul.ftz.f32 	%f69, %f66, %f68;
	fma.rn.ftz.f32 	%f70, %f64, %f67, %f69;
	mul.ftz.f32 	%f71, %f64, %f64;
	mul.ftz.f32 	%f72, %f64, %f71;
	sub.ftz.f32 	%f73, %f72, %f64;
	ld.const.f32 	%f74, [%rd30+64];
	mul.ftz.f32 	%f75, %f66, %f66;
	mul.ftz.f32 	%f76, %f66, %f75;
	sub.ftz.f32 	%f77, %f76, %f66;
	ld.const.f32 	%f78, [%rd32+64];
	mul.ftz.f32 	%f79, %f77, %f78;
	fma.rn.ftz.f32 	%f80, %f73, %f74, %f79;
	mul.ftz.f32 	%f81, %f61, %f61;
	mul.ftz.f32 	%f82, %f81, %f80;
	mov.f32 	%f83, 0f40C00000;
	div.approx.ftz.f32 	%f84, %f82, %f83;
	add.ftz.f32 	%f116, %f70, %f84;
	bra.uni 	BB2_24;

BB2_20:
	setp.eq.ftz.f32	%p17, %f29, 0f3F800000;
	@%p17 bra 	BB2_22;
	bra.uni 	BB2_21;

BB2_22:
	add.ftz.f32 	%f90, %f112, 0f3F800000;
	sub.ftz.f32 	%f116, %f90, %f115;
	bra.uni 	BB2_24;

BB2_15:
	setp.eq.ftz.f32	%p14, %f25, 0f3F800000;
	@%p14 bra 	BB2_17;
	bra.uni 	BB2_16;

BB2_17:
	add.ftz.f32 	%f88, %f115, 0f3F800000;
	sub.ftz.f32 	%f116, %f88, %f113;
	bra.uni 	BB2_24;

BB2_21:
	setp.ge.ftz.f32	%p18, %f115, 0f00000000;
	add.ftz.f32 	%f89, %f115, %f29;
	selp.f32	%f116, %f29, %f89, %p18;
	bra.uni 	BB2_24;

BB2_16:
	setp.le.ftz.f32	%p15, %f115, 0f3F800000;
	mov.f32 	%f85, 0f3F800000;
	sub.ftz.f32 	%f86, %f85, %f25;
	sub.ftz.f32 	%f87, %f115, %f86;
	selp.f32	%f116, %f25, %f87, %p15;

BB2_24:
	sub.ftz.f32 	%f91, %f116, %f115;
	fma.rn.ftz.f32 	%f115, %f111, %f91, %f115;

BB2_25:
	ld.const.f32 	%f92, [k601YPbPr_To_RGB32f];
	ld.const.f32 	%f93, [k601YPbPr_To_RGB32f+4];
	mul.ftz.f32 	%f94, %f14, %f93;
	fma.rn.ftz.f32 	%f95, %f115, %f92, %f94;
	ld.const.f32 	%f96, [k601YPbPr_To_RGB32f+8];
	fma.rn.ftz.f32 	%f37, %f15, %f96, %f95;
	ld.const.f32 	%f97, [k601YPbPr_To_RGB32f+12];
	ld.const.f32 	%f98, [k601YPbPr_To_RGB32f+16];
	mul.ftz.f32 	%f99, %f14, %f98;
	fma.rn.ftz.f32 	%f100, %f115, %f97, %f99;
	ld.const.f32 	%f101, [k601YPbPr_To_RGB32f+20];
	fma.rn.ftz.f32 	%f38, %f15, %f101, %f100;
	ld.const.f32 	%f102, [k601YPbPr_To_RGB32f+24];
	ld.const.f32 	%f103, [k601YPbPr_To_RGB32f+28];
	mul.ftz.f32 	%f104, %f14, %f103;
	fma.rn.ftz.f32 	%f105, %f115, %f102, %f104;
	ld.const.f32 	%f106, [k601YPbPr_To_RGB32f+32];
	fma.rn.ftz.f32 	%f39, %f15, %f106, %f105;
	@%p4 bra 	BB2_27;

	st.global.v4.f32 	[%rd2], {%f39, %f38, %f37, %f110};
	bra.uni 	BB2_28;

BB2_27:
	mul.wide.s32 	%rd34, %r21, 8;
	add.s64 	%rd35, %rd8, %rd34;
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f110;
	mov.b16 	%rs9, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f37;
	mov.b16 	%rs10, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f38;
	mov.b16 	%rs11, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f39;
	mov.b16 	%rs12, %temp;
}
	st.global.v4.u16 	[%rd35], {%rs12, %rs11, %rs10, %rs9};

BB2_28:
	ret;
}


