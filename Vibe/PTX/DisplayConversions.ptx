//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21112126
// Cuda compilation tools, release 8.0, V8.0.43
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_30
.address_size 64

	// .globl	PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel

.visible .entry PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel(
	.param .u64 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_0,
	.param .u64 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_1,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_2,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_3,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_4,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_5,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_6
)
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<13>;
	.reg .f32 	%f<29>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_0];
	ld.param.u64 	%rd3, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_1];
	ld.param.u32 	%r3, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_2];
	ld.param.u32 	%r4, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_3];
	ld.param.u32 	%r5, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_4];
	ld.param.u32 	%r6, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_5];
	ld.param.u32 	%r7, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_8uKernel_param_6];
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r2, %r11, %r12, %r13;
	setp.lt.s32	%p1, %r1, %r6;
	setp.lt.s32	%p2, %r2, %r7;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB0_5;
	bra.uni 	BB0_1;

BB0_1:
	mad.lo.s32 	%r14, %r2, %r3, %r1;
	cvt.s64.s32	%rd1, %r14;
	setp.eq.s32	%p4, %r5, 0;
	@%p4 bra 	BB0_3;

	cvta.to.global.u64 	%rd4, %rd2;
	shl.b64 	%rd5, %rd1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.v4.f32 	{%f13, %f14, %f15, %f16}, [%rd6];
	mov.f32 	%f28, %f16;
	mov.f32 	%f27, %f15;
	mov.f32 	%f26, %f14;
	mov.f32 	%f25, %f13;
	bra.uni 	BB0_4;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd2;
	shl.b64 	%rd8, %rd1, 3;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.v4.u16 	{%rs1, %rs2, %rs3, %rs4}, [%rd9];
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs1;
	cvt.f32.f16 	%f25, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs2;
	cvt.f32.f16 	%f26, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs3;
	cvt.f32.f16 	%f27, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs4;
	cvt.f32.f16 	%f28, %temp;
	}

BB0_4:
	cvta.to.global.u64 	%rd10, %rd3;
	cvt.ftz.sat.f32.f32	%f17, %f28;
	mul.ftz.f32 	%f18, %f17, 0f437F0000;
	mad.lo.s32 	%r15, %r2, %r4, %r1;
	cvt.ftz.sat.f32.f32	%f19, %f27;
	fma.rn.ftz.f32 	%f20, %f19, %f18, 0f3F000000;
	cvt.rzi.ftz.u32.f32	%r16, %f20;
	cvt.ftz.sat.f32.f32	%f21, %f26;
	fma.rn.ftz.f32 	%f22, %f18, %f21, 0f3F000000;
	cvt.rzi.ftz.u32.f32	%r17, %f22;
	cvt.ftz.sat.f32.f32	%f23, %f25;
	fma.rn.ftz.f32 	%f24, %f18, %f23, 0f3F000000;
	cvt.rzi.ftz.u32.f32	%r18, %f24;
	mul.wide.s32 	%rd11, %r15, 4;
	add.s64 	%rd12, %rd10, %rd11;
	cvt.u16.u32	%rs9, %r18;
	cvt.u16.u32	%rs10, %r17;
	cvt.u16.u32	%rs11, %r16;
	mov.u16 	%rs12, 255;
	st.global.v4.u8 	[%rd12], {%rs11, %rs10, %rs9, %rs12};

BB0_5:
	ret;
}

	// .globl	PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel
.visible .entry PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel(
	.param .u64 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_0,
	.param .u64 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_1,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_2,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_3,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_4,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_5,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_6,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<13>;
	.reg .f32 	%f<27>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd3, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_0];
	ld.param.u64 	%rd4, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_1];
	ld.param.u32 	%r3, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_2];
	ld.param.u32 	%r4, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_3];
	ld.param.u32 	%r5, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_4];
	ld.param.u32 	%r6, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_5];
	ld.param.u32 	%r7, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_6];
	ld.param.u32 	%r8, [PixelFormatConvert_BGRA_4444_32f_to_RGBX_4444_32fKernel_param_7];
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r9, %r10, %r11;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %ctaid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r2, %r12, %r13, %r14;
	setp.lt.s32	%p1, %r1, %r7;
	setp.lt.s32	%p2, %r2, %r8;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB1_7;
	bra.uni 	BB1_1;

BB1_1:
	mad.lo.s32 	%r15, %r2, %r3, %r1;
	cvt.s64.s32	%rd1, %r15;
	setp.eq.s32	%p4, %r4, 0;
	@%p4 bra 	BB1_3;

	cvta.to.global.u64 	%rd5, %rd3;
	shl.b64 	%rd6, %rd1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.v4.f32 	{%f16, %f17, %f18, %f19}, [%rd7];
	mov.f32 	%f26, %f19;
	mov.f32 	%f25, %f18;
	mov.f32 	%f24, %f17;
	mov.f32 	%f23, %f16;
	bra.uni 	BB1_4;

BB1_3:
	cvta.to.global.u64 	%rd8, %rd3;
	shl.b64 	%rd9, %rd1, 3;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.v4.u16 	{%rs1, %rs2, %rs3, %rs4}, [%rd10];
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs1;
	cvt.f32.f16 	%f23, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs2;
	cvt.f32.f16 	%f24, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs3;
	cvt.f32.f16 	%f25, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs4;
	cvt.f32.f16 	%f26, %temp;
	}

BB1_4:
	cvt.ftz.sat.f32.f32	%f20, %f26;
	mul.ftz.f32 	%f13, %f25, %f20;
	mul.ftz.f32 	%f14, %f24, %f20;
	mul.ftz.f32 	%f15, %f23, %f20;
	mad.lo.s32 	%r16, %r2, %r5, %r1;
	cvt.s64.s32	%rd2, %r16;
	setp.eq.s32	%p5, %r6, 0;
	@%p5 bra 	BB1_6;

	cvta.to.global.u64 	%rd11, %rd4;
	shl.b64 	%rd12, %rd2, 4;
	add.s64 	%rd13, %rd11, %rd12;
	mov.f32 	%f21, 0f3F800000;
	st.global.v4.f32 	[%rd13], {%f13, %f14, %f15, %f21};
	bra.uni 	BB1_7;

BB1_6:
	cvta.to.global.u64 	%rd14, %rd4;
	shl.b64 	%rd15, %rd2, 3;
	add.s64 	%rd16, %rd14, %rd15;
	mov.f32 	%f22, 0f3F800000;
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f22;
	mov.b16 	%rs9, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f15;
	mov.b16 	%rs10, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f14;
	mov.b16 	%rs11, %temp;
}
	{
	.reg .b16 %temp;
	cvt.rn.ftz.f16.f32 	%temp, %f13;
	mov.b16 	%rs12, %temp;
}
	st.global.v4.u16 	[%rd16], {%rs12, %rs11, %rs10, %rs9};

BB1_7:
	ret;
}

	// .globl	PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel
.visible .entry PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel(
	.param .u64 PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_0,
	.param .u64 PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_1,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_2,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_3,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_4,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_5,
	.param .u32 PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_6
)
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<29>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_0];
	ld.param.u64 	%rd3, [PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_1];
	ld.param.u32 	%r3, [PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_2];
	ld.param.u32 	%r4, [PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_3];
	ld.param.u32 	%r5, [PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_4];
	ld.param.u32 	%r6, [PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_5];
	ld.param.u32 	%r7, [PixelFormatConvert_BGRA_4444_32f_to_BGR10uX2uKernel_param_6];
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r2, %r11, %r12, %r13;
	setp.lt.s32	%p1, %r1, %r6;
	setp.lt.s32	%p2, %r2, %r7;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB2_5;
	bra.uni 	BB2_1;

BB2_1:
	mad.lo.s32 	%r14, %r2, %r3, %r1;
	cvt.s64.s32	%rd1, %r14;
	setp.eq.s32	%p4, %r5, 0;
	@%p4 bra 	BB2_3;

	cvta.to.global.u64 	%rd4, %rd2;
	shl.b64 	%rd5, %rd1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.v4.f32 	{%f13, %f14, %f15, %f16}, [%rd6];
	mov.f32 	%f28, %f16;
	mov.f32 	%f27, %f15;
	mov.f32 	%f26, %f14;
	mov.f32 	%f25, %f13;
	bra.uni 	BB2_4;

BB2_3:
	cvta.to.global.u64 	%rd7, %rd2;
	shl.b64 	%rd8, %rd1, 3;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.v4.u16 	{%rs1, %rs2, %rs3, %rs4}, [%rd9];
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs1;
	cvt.f32.f16 	%f25, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs2;
	cvt.f32.f16 	%f26, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs3;
	cvt.f32.f16 	%f27, %temp;
	}
	{
	.reg .b16 %temp;
	mov.b16 	%temp, %rs4;
	cvt.f32.f16 	%f28, %temp;
	}

BB2_4:
	cvta.to.global.u64 	%rd10, %rd3;
	cvt.ftz.sat.f32.f32	%f17, %f28;
	mul.ftz.f32 	%f18, %f17, 0f447FC000;
	cvt.ftz.sat.f32.f32	%f19, %f25;
	fma.rn.ftz.f32 	%f20, %f19, %f18, 0f3F000000;
	cvt.rzi.ftz.u32.f32	%r15, %f20;
	shl.b32 	%r16, %r15, 22;
	cvt.ftz.sat.f32.f32	%f21, %f26;
	fma.rn.ftz.f32 	%f22, %f18, %f21, 0f3F000000;
	cvt.rzi.ftz.u32.f32	%r17, %f22;
	shl.b32 	%r18, %r17, 12;
	cvt.ftz.sat.f32.f32	%f23, %f27;
	fma.rn.ftz.f32 	%f24, %f18, %f23, 0f3F000000;
	cvt.rzi.ftz.u32.f32	%r19, %f24;
	shl.b32 	%r20, %r19, 2;
	or.b32  	%r21, %r16, %r18;
	or.b32  	%r22, %r21, %r20;
	or.b32  	%r23, %r22, 3;
	mad.lo.s32 	%r24, %r2, %r4, %r1;
	mul.wide.s32 	%rd11, %r24, 4;
	add.s64 	%rd12, %rd10, %rd11;
	st.global.u32 	[%rd12], %r23;

BB2_5:
	ret;
}


